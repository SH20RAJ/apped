generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String
  avatar        String
  image         String
  githubtoken   String?
  createdStores Store[]  @relation("UserCreatedStores") // Stores created by the user
  ownedApps     App[]    @relation("UserOwnedApps") // Apps owned by the user
  reviews       Review[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  stores        Store[]  @relation("StoreUsers")
}

model Store {
  id          Int      @id @default(autoincrement())
  name        String
  createdById Int // Foreign key to the user who created the store
  createdBy   User     @relation("UserCreatedStores", fields: [createdById], references: [id])
  users       User[]   @relation("StoreUsers") // Users associated with the store
  apps        App[]    @relation("StoreApps") // Apps associated with the store
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model App {
  id               Int          @id @default(autoincrement())
  name             String
  packageName      String       @unique
  slug             String       @unique
  logo             String
  shortDesc        String
  description      String
  policyUrl        String
  icon             String
  appLink          String
  type             AppType
  screenshots      String
  userId           Int
  user             User         @relation("UserOwnedApps", fields: [userId], references: [id])
  storeId          Int
  store            Store        @relation("StoreApps", fields: [storeId], references: [id])
  categories       Category[]   @relation("AppCategories")
  versions         AppVersion[]
  reviews          Review[]
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  contentRating    String?
  installs         String?
  size             String?
  version          String?
  androidVer       String?
  developer        String?
  developerEmail   String?
  developerWebsite String?
  developerAddress String?
  privacyPolicy    String?
  whatsNew         String?
  video            String?
  featured         Boolean?
  status           Boolean?
  price            Float?
  currency         String?
  free             Boolean?
  sale             Boolean?
  salePrice        Float?
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  apps App[]  @relation("AppCategories")
}

model AppVersion {
  id        Int      @id @default(autoincrement())
  version   String
  appId     Int
  app       App      @relation(fields: [appId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String
  appId     Int
  app       App      @relation(fields: [appId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AppType {
  APP
  GAME
}
